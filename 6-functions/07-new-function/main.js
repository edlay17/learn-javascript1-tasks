'use strict'

/*
let func = new Function([arg1, arg2, ...argN], functionBody);

интересные особенности:
можно создать функцию налету из строки (строка, например, может прийти с сервера)
замыкания работают иначе - при рождении функции таким способом, в Environment записывается ссылка на глобальное(!) лексическое окружение

особенность с замыканием важная, т.к. код функции может стать известным только в процессе выполнения,
а во всех скриптах имена всех локальных переменных сжимаются при помощи минификаторов (let userName -> let a) и изменяются везде
так что, если бы функция, созданная из строки и имела ссылку на лексическое окружение, в котором родилась, тех переменных она бы уже не нашла
 */

const func1 = new Function('a', 'b', 'return a + b'); // стандартный синтаксис
const func2 = new Function('a,b', 'return a + b'); // через запятую в одной строке
const func3 = new Function('a , b', 'return a + b'); // через запятую с пробелами в одной строке